from tkinter import *

root = Tk()
root.title("더스트커버 내구지수 예측")
root.geometry("400x400") #가로 x 세로
root.resizable(False, False) # 창 크기 변경 불가 

chk_frame = LabelFrame(root, text= "확인 사항 - 체크 후 실행 가능",padx=40, pady=10)
chk_frame.pack()

chkvar1 = IntVar() # chkvar 에 int 형으로 값을 저장한다
chkvar2 = IntVar()
chkvar3 = IntVar()
chkbox1 = Checkbutton(chk_frame, text="해석 모델 파일과 프로그램 동일 폴더 확인", variable=chkvar1)
chkbox1.pack()
chkbox2 = Checkbutton(chk_frame, text="해석 모델 내 휠센터, 볼트좌면 단차 형성 확인", variable=chkvar2)
chkbox2.pack()
chkbox3 = Checkbutton(chk_frame, text="해석 모델 재질 입력 확인", variable=chkvar3)
chkbox3.pack()

#휠센터 인풋
chk_frame2 = LabelFrame(root, text= "휠센터 좌표", padx=67, pady=10)
chk_frame2.pack()

label_x = Label(chk_frame2, text="x좌표")
e_x = Entry(chk_frame2, width=10)

label_x.grid(row=0, column=0)
e_x.grid(row=1, column=0)

label_y = Label(chk_frame2, text="y좌표")
e_y = Entry(chk_frame2, width=10)

label_y.grid(row=0, column=3)
e_y.grid(row=1, column=3)

label_z = Label(chk_frame2, text="z좌표")
e_z = Entry(chk_frame2, width=10)

label_z.grid(row=0, column=6)
e_z.grid(row=1, column=6)

label_name = Label(root, text="Made by LDJ, SKH")
label_name.pack(side="bottom", anchor="e")


frequency = []

#def btncmd():
 #   카티아 실행 및 고유진동수 해석 매크로 실행하는 명령어 기입 필요
def btncmd1():
    # 휠센터 입력받은 내용을 변수로 변환
    whl_x = e_x.get()
    whl_y = e_y.get()
    whl_z = e_z.get()

    # 휠센터 변경
    new_text_content = ''
    with open("D:\DCVR\script_before.txt",'r', encoding='utf-8') as f:
        lines = f.readlines()
        for i, l in enumerate(lines):
            if i == 111:  #스크립트의 112번째 줄(휠센터 입력) 변환
                new_string = '  <Position Value="{} mm,{} mm,{} mm"/>'.format(whl_x, whl_y, whl_z) + "\n"
            else:
                new_string = l
            
            new_text_content += new_string

    # 바뀐 내용으로 기존 파일에 덮어쓰기                
    with open("D:\DCVR\script_before.txt",'w', encoding='utf-8') as f:
        f.write(new_text_content)

    #해석 실행하는 과정 필요

    #결과 파일을 열어서 1~6차 고유 진동수 추출
    f = open("D:/DCVR/1234.txt", 'r')
    text = f.read()
    global frequency
    a = 0
    text = text[text.find("Subcase Mode"):] #해석 결과 값 위에 있는 subcase mode 기준으로 자르기
    while a<6 : # 6회 반복
        x = text.find("E+0")
        if text.find("E+0") > 1 and text[x+3] == "2": #E+02: 100배
            frequency.append(int((float(text[x-8 : x-4])*100)))
        elif text.find("E+0") > 1 and text[x+3] == "1": #E+01: 10배
            frequency.append(int((float(text[x-8 : x-4])*10)))
        text = text[x+50:] #읽어낸 고유진동수값의 줄 자르기
        a +=1
    f.close()


   
    frame3 = LabelFrame(root, text= "고유진동수 값",padx=62, pady=10)
    frame3.pack()

    if chkvar1.get() == 1 and chkvar2.get() == 1 and chkvar3.get() == 1 :  # 체크박스가 1일때(체크 有)만 실행
        if frequency[0] < 70 : #1차 고유진동수가 낮을때 강성 부족(+빨간색) 경고 뜨게 해봤는데 어떨까요??
            label1 = Label(frame3, text="1차 : 강성 부족", fg = "red")
            e1 = Entry(frame3, width=5)
            label1.grid(row=0, column=0)
            e1.grid(row=1, column=0)
        else :
            label1 = Label(frame3, text="1차")
            e1 = Entry(frame3, width=5)
            label1.grid(row=0, column=0)
            e1.grid(row=1, column=0)

        label2 = Label(frame3, text="2차")
        e2 = Entry(frame3, width=5)
        label2.grid(row=0, column=1)
        e2.grid(row=1, column=1)
        label3 = Label(frame3, text="3차")
        e3 = Entry(frame3, width=5)
        label3.grid(row=0, column=2)
        e3.grid(row=1, column=2)
        label4 = Label(frame3, text="4차")
        e4 = Entry(frame3, width=5)
        label4.grid(row=0, column=3)
        e4.grid(row=1, column=3)
        label5 = Label(frame3, text="5차")
        e5 = Entry(frame3, width=5)
        label5.grid(row=0, column=4)
        e5.grid(row=1, column=4)
        label6 = Label(frame3, text="6차")
        e6 = Entry(frame3, width=5)
        label6.grid(row=0, column=5)
        e6.grid(row=1, column=5)
        
        e1.insert(0, frequency[0]) # 위에서 생성한 FREQUENCY 자동 삽입
        e2.insert(0, frequency[1])
        e3.insert(0, frequency[2])
        e4.insert(0, frequency[3])
        e5.insert(0, frequency[4])
        e6.insert(0, frequency[5])

        btn2.pack() # 버튼 1 실행 후 버튼 2 생성
btn1 = Button(root, text="고유진동수 해석", command=btncmd1)
btn1.place(relx=0.37, y=200)

def btncmd2():
    e7 = Entry(root, width=15)
    e7.pack()

    import numpy as np
    import pandas as pd
    from sklearn.ensemble import RandomForestRegressor

    # Database 폴더 경로 입력 필요
    dataset =pd.read_csv('D:\DCVR\code\A_type_dcvr_train_database_221213_refined.csv')

    X = dataset.iloc[:, :-1].values
    Y = dataset.iloc[:, -1].values

    from sklearn.model_selection import train_test_split
    X_train, X_test, Y_train, Y_test= train_test_split(X, Y, test_size= 0.1, random_state= 1)

    regressor=RandomForestRegressor()
    regressor.fit(X_train,Y_train)
      
    e7.insert(0, regressor.predict([[frequency[0], frequency[1], frequency[2], frequency[3], frequency[4], frequency[5]]]))  # 대괄호 내 frf1~frf6 자동 입력 명령 필요

btn2 = Button(root, text="내구지수 예측", command=btncmd2)

root.mainloop()
